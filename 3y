lex:
%{
#include<stdio.h>
#include"y.tab.h"
extern int yylval;
%}
%%
[0-9]+ {
yylval=atoi(yytext);
return NUM;
}
[\t] ;\n return 0;
. return yytext[0];
%%
int yywrap(void)
{
return 1;
}
yacc:
%{
#include<stdio.h>
%}
%token NUM
%left '+' '-'
%left '*' '/'
%left '(' ')'
%%
expr:e{
printf("result:%d\n",$$);
return 0;
}
e:e'+'e {$$=$1+$3;}
|e'-'e {$$=$1-$3;}
|e'*'e {$$=$1*$3;}
|e'/'e {$$=$1/$3;}
|'('e')' {$$=$2;}
| NUM {$$=$1;}
;
%%
main()
{
printf("\n enter the arithematic expression:\n");
yyparse();
printf("\nvalid expression\n");
}
yyerror()
{
printf("\n invalid expression\n");exit(0);
}
output:
shravan@ubuntu:~/ss_final/yacc$ gedit yacc3.y
shravan@ubuntu:~/ss_final/yacc$ gedit lex3.l
shravan@ubuntu:~/ss_final/yacc$ lex lex3.l
shravan@ubuntu:~/ss_final/yacc$ yacc -d yacc3.y
shravan@ubuntu:~/ss_final/yacc$ cc lex.yy.c y.tab.c -ll
shravan@ubuntu:~/ss_final/yacc$ ./a.out
enter the arithematic expression:
5+6
result:11
valid expression
